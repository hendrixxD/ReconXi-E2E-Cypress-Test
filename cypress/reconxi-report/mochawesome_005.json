{
  "stats": {
    "suites": 2,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-30T13:21:28.246Z",
    "end": "2025-03-30T13:22:21.606Z",
    "duration": 53360,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5dc2a436-1f19-474e-925d-ec4fd79ed98b",
      "title": "",
      "fullFile": "cypress/e2e/Files Upload_And Reconcilation/files-upload-and-reconcilation-ui-implementation.cy.js",
      "file": "cypress/e2e/Files Upload_And Reconcilation/files-upload-and-reconcilation-ui-implementation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f36d5872-d5db-4224-b8b4-79f956cea79b",
          "title": "File Upload Authorized Page Validation: validate UI implementation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate main page elements",
              "fullTitle": "File Upload Authorized Page Validation: validate UI implementation should validate main page elements",
              "timedOut": null,
              "duration": 6570,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('h2', 'Upload Bank Statement').should('be.visible');\ncy.contains('h2', 'Upload Company Ledger').should('be.visible');",
              "err": {},
              "uuid": "b884b65d-897a-4d88-b825-4a00ed1ccbdd",
              "parentUUID": "f36d5872-d5db-4224-b8b4-79f956cea79b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate Bank Statement Section",
              "fullTitle": "File Upload Authorized Page Validation: validate UI implementation should validate Bank Statement Section",
              "timedOut": null,
              "duration": 6909,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('div[role=\"presentation\"]').should('contain.text', 'Choose file').and('have.css', 'border-color', 'rgba(51, 51, 51, 0.5)');",
              "err": {},
              "uuid": "9e38b27e-4cd8-4562-a84c-08428e8a1099",
              "parentUUID": "f36d5872-d5db-4224-b8b4-79f956cea79b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate Company Ledger Section",
              "fullTitle": "File Upload Authorized Page Validation: validate UI implementation should validate Company Ledger Section",
              "timedOut": null,
              "duration": 7394,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Upload Company Ledger').parent().find('div[role=\"presentation\"]').should('contain.text', 'Choose file').and('have.css', 'border-color', 'rgba(51, 51, 51, 0.5)');",
              "err": {},
              "uuid": "352f94bc-b919-4734-bc3a-c48b6976029b",
              "parentUUID": "f36d5872-d5db-4224-b8b4-79f956cea79b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate format requirements : CSV",
              "fullTitle": "File Upload Authorized Page Validation: validate UI implementation should validate format requirements : CSV",
              "timedOut": null,
              "duration": 6844,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Supported format: CSV').should('have.length', 1);\ncy.contains('Maximum size: 2MB').should('have.length', 1);",
              "err": {},
              "uuid": "d38249fd-b195-43b9-9dda-28b8c6feb3e9",
              "parentUUID": "f36d5872-d5db-4224-b8b4-79f956cea79b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate header elements for a logged in user",
              "fullTitle": "File Upload Authorized Page Validation: validate UI implementation should validate header elements for a logged in user",
              "timedOut": null,
              "duration": 6862,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Validate that the ReconXi logo (a link to \"/\") is visible and contains the logo SVG and text.\ncy.get('a[href=\"/\"]').should('be.visible').within(() => {\n  cy.get('svg').should('be.visible');\n  cy.contains('ReconXi').should('be.visible');\n});",
              "err": {},
              "uuid": "a1ee0b66-87f3-45ba-98f3-a6f1bd107f2a",
              "parentUUID": "f36d5872-d5db-4224-b8b4-79f956cea79b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check for profile icon",
              "fullTitle": "File Upload Authorized Page Validation: validate UI implementation should check for profile icon",
              "timedOut": null,
              "duration": 7157,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-slot=\"dropdown-menu-trigger\"]').should('be.visible').first().within(() => {\n  // Check either profile image or initial letter is visible\n  cy.get('.rounded-full').should('be.visible')\n  // If no image exists, verify first letter of username\n  .then($el => {\n    if ($el.find('img').length === 0) {\n      // Replace 'T' with first letter of expected username\n      cy.wrap($el).should('contain.text', 'L');\n    }\n  });\n  // Validate dropdown chevron\n  cy.get('svg.lucide-chevron-down').should('be.visible');\n});",
              "err": {},
              "uuid": "9a4ec982-d6df-476a-86ba-26d6a7b0eb89",
              "parentUUID": "f36d5872-d5db-4224-b8b4-79f956cea79b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check for profile icon with dynamic user initial using session token",
              "fullTitle": "File Upload Authorized Page Validation: validate UI implementation should check for profile icon with dynamic user initial using session token",
              "timedOut": null,
              "duration": 7137,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get the session token from the cookie\ncy.getCookie('next-auth.session-token').should('exist').then(cookie => {\n  // Use the cookie value as your token (prepend \"Bearer \" if needed)\n  const sessionToken = cookie.value;\n  const authHeader = sessionToken.startsWith('Bearer ') ? sessionToken : `Bearer ${sessionToken}`;\n  // Use the session token in the API request to get the user details\n  cy.request({\n    method: 'GET',\n    url: 'https://api-dev.reconxi.com/api/v1/user',\n    headers: {\n      Authorization: authHeader\n    }\n  }).then(response => {\n    const userName = response.body.data.user.name;\n    const firstLetter = userName.charAt(0).toUpperCase();\n    cy.get('[data-slot=\"dropdown-menu-trigger\"]').should('be.visible').first().within(() => {\n      cy.get('.rounded-full').should('be.visible').then($el => {\n        if ($el.find('img').length === 0) {\n          cy.wrap($el).should('contain.text', firstLetter);\n        }\n      });\n      cy.get('svg.lucide-chevron-down').should('be.visible');\n    });\n  });\n});",
              "err": {},
              "uuid": "8c0c73f8-2b18-4849-88f7-6feaaf612a42",
              "parentUUID": "f36d5872-d5db-4224-b8b4-79f956cea79b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b884b65d-897a-4d88-b825-4a00ed1ccbdd",
            "9e38b27e-4cd8-4562-a84c-08428e8a1099",
            "352f94bc-b919-4734-bc3a-c48b6976029b",
            "d38249fd-b195-43b9-9dda-28b8c6feb3e9",
            "a1ee0b66-87f3-45ba-98f3-a6f1bd107f2a",
            "9a4ec982-d6df-476a-86ba-26d6a7b0eb89",
            "8c0c73f8-2b18-4849-88f7-6feaaf612a42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48873,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "36f54873-f2d0-427d-94fc-301b10ad5160",
          "title": "File Upload Unauthorized Page Validation: validate UI implementation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should redirect unauthorized users to the unauthorized page",
              "fullTitle": "File Upload Unauthorized Page Validation: validate UI implementation should redirect unauthorized users to the unauthorized page",
              "timedOut": null,
              "duration": 3490,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Attempt to visit the file upload page without logging in\ncy.visit('/file-upload', {\n  failOnStatusCode: false\n});\n// Verify that the unauthorized page is displayed\ncy.get('.w-fit.mx-auto.my-32.flex.flex-col.items-center.gap-4').should('be.visible').within(() => {\n  cy.contains('OOPS!').should('be.visible');\n  cy.contains('UNAUTHORIZED').should('be.visible');\n  cy.contains('a', 'Go Back').should('be.visible');\n});\n// Verify the presence of the ReconXi logo\ncy.get('a[href=\"/\"]').should('be.visible').first().within(() => {\n  cy.get('svg').should('be.visible'); // Assuming the logo is an SVG\n  cy.contains('ReconXi').should('be.visible');\n});\n// Verify the presence of the \"Login\" and \"Sign up\" buttons\ncy.get('button').contains('Login').should('be.visible');\ncy.get('button').contains('Sign up').should('be.visible');",
              "err": {},
              "uuid": "712d3b98-2a8d-449b-b557-ba3523112192",
              "parentUUID": "36f54873-f2d0-427d-94fc-301b10ad5160",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "712d3b98-2a8d-449b-b557-ba3523112192"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reconxi-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}